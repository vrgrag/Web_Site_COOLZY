{"ast":null,"code":"var _jsxFileName = \"H:\\\\Website\\\\Website_Technical_Store\\\\react-website\\\\src\\\\pages\\\\Auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../../services/api'; // Ваш API-метод\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = async data => {\n    try {\n      await loginUser(data);\n      alert('Вход выполнен!');\n      // Перенаправление на профиль\n    } catch (error) {\n      alert('Ошибка: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u041E\\u0419\\u0422\\u0418\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"email\", {\n          required: \"Обязательное поле\"\n        }),\n        placeholder: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\", {\n          required: \"Обязательное поле\"\n        }),\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-links\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \\u0421\\u043E\\u0437\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0435\\u0433\\u043E \\u0437\\u0434\\u0435\\u0441\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forgot-password\",\n        children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","Link","loginUser","jsxDEV","_jsxDEV","Login","_s","register","handleSubmit","formState","errors","onSubmit","data","alert","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","required","placeholder","email","type","password","to","_c","$RefreshReg$"],"sources":["H:/Website/Website_Technical_Store/react-website/src/pages/Auth/Login.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUser } from '../../services/api'; // Ваш API-метод\r\n\r\nexport default function Login() {\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      await loginUser(data);\r\n      alert('Вход выполнен!');\r\n      // Перенаправление на профиль\r\n    } catch (error) {\r\n      alert('Ошибка: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h1>ВОЙТИ</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* Email */}\r\n        <input\r\n          {...register(\"email\", { required: \"Обязательное поле\" })}\r\n          placeholder=\"E-mail\"\r\n        />\r\n        {errors.email && <span className=\"error\">{errors.email.message}</span>}\r\n\r\n        {/* Пароль */}\r\n        <input\r\n          type=\"password\"\r\n          {...register(\"password\", { required: \"Обязательное поле\" })}\r\n          placeholder=\"Пароль\"\r\n        />\r\n        {errors.password && <span className=\"error\">{errors.password.message}</span>}\r\n\r\n        <button type=\"submit\">Войти</button>\r\n      </form>\r\n\r\n      <div className=\"auth-links\">\r\n        <Link to=\"/register\">Нет аккаунта? Создайте его здесь</Link>\r\n        <Link to=\"/forgot-password\">Забыли пароль?</Link>\r\n        <Link to=\"/\">Главная</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}