// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnicalStoreBackEnd.Models;

#nullable disable

namespace TechnicalStoreBackEnd.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250528105341_SeedCategoriesAndProducts")]
    partial class SeedCategoriesAndProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FavoriteItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteItems");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.HasIndex("UserId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Смартфоны"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Телевизоры"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Ноутбуки"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Колонки"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Планшеты"
                        });
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Storage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 100,
                            Availability = "В наличии",
                            Brand = "Apple",
                            CategoryId = 1,
                            Images = "/img/tovar/iphone14.jpg",
                            Model = "iPhone 14",
                            NewPrice = 900m,
                            OldPrice = 1000m,
                            Ram = "8GB",
                            Storage = "128GB"
                        },
                        new
                        {
                            ProductId = 101,
                            Availability = "В наличии",
                            Brand = "Samsung",
                            CategoryId = 1,
                            Images = "/img/tovar/galaxys23.jpg",
                            Model = "Galaxy S23",
                            NewPrice = 1000m,
                            OldPrice = 1100m,
                            Ram = "8GB",
                            Storage = "128GB"
                        },
                        new
                        {
                            ProductId = 102,
                            Availability = "В наличии",
                            Brand = "Google",
                            CategoryId = 1,
                            Images = "/img/tovar/pixel7.jpg",
                            Model = "Pixel 7",
                            NewPrice = 850m,
                            OldPrice = 900m,
                            Ram = "8GB",
                            Storage = "256GB"
                        },
                        new
                        {
                            ProductId = 103,
                            Availability = "В наличии",
                            Brand = "Sony",
                            CategoryId = 1,
                            Images = "/img/tovar/xperia1iv.jpg",
                            Model = "Xperia 1 IV",
                            NewPrice = 1100m,
                            OldPrice = 1200m,
                            Ram = "12GB",
                            Storage = "256GB"
                        },
                        new
                        {
                            ProductId = 104,
                            Availability = "В наличии",
                            Brand = "OnePlus",
                            CategoryId = 1,
                            Images = "/img/tovar/oneplus11.jpg",
                            Model = "OnePlus 11",
                            NewPrice = 900m,
                            OldPrice = 950m,
                            Ram = "16GB",
                            Storage = "256GB"
                        },
                        new
                        {
                            ProductId = 105,
                            Availability = "В наличии",
                            Brand = "Xiaomi",
                            CategoryId = 1,
                            Images = "/img/tovar/redminote12.jpg",
                            Model = "Redmi Note 12",
                            NewPrice = 550m,
                            OldPrice = 600m,
                            Ram = "6GB",
                            Storage = "128GB"
                        },
                        new
                        {
                            ProductId = 106,
                            Availability = "В наличии",
                            Brand = "Motorola",
                            CategoryId = 1,
                            Images = "/img/tovar/motogpower.jpg",
                            Model = "Moto G Power",
                            NewPrice = 450m,
                            OldPrice = 500m,
                            Ram = "4GB",
                            Storage = "64GB"
                        },
                        new
                        {
                            ProductId = 107,
                            Availability = "В наличии",
                            Brand = "Oppo",
                            CategoryId = 1,
                            Images = "/img/tovar/findx5.jpg",
                            Model = "Find X5",
                            NewPrice = 950m,
                            OldPrice = 1000m,
                            Ram = "8GB",
                            Storage = "256GB"
                        },
                        new
                        {
                            ProductId = 108,
                            Availability = "В наличии",
                            Brand = "Asus",
                            CategoryId = 1,
                            Images = "/img/tovar/zenfone9.jpg",
                            Model = "Zenfone 9",
                            NewPrice = 750m,
                            OldPrice = 800m,
                            Ram = "8GB",
                            Storage = "128GB"
                        },
                        new
                        {
                            ProductId = 109,
                            Availability = "В наличии",
                            Brand = "OnePlus",
                            CategoryId = 1,
                            Images = "/img/tovar/nord3.jpg",
                            Model = "Nord 3",
                            NewPrice = 650m,
                            OldPrice = 700m,
                            Ram = "8GB",
                            Storage = "128GB"
                        },
                        new
                        {
                            ProductId = 200,
                            Availability = "В наличии",
                            Brand = "LG",
                            CategoryId = 2,
                            Images = "/img/tovar/oled55c2.jpg",
                            Model = "OLED55C2",
                            NewPrice = 1400m,
                            OldPrice = 1500m
                        },
                        new
                        {
                            ProductId = 201,
                            Availability = "В наличии",
                            Brand = "Samsung",
                            CategoryId = 2,
                            Images = "/img/tovar/qledq80b.jpg",
                            Model = "QLED Q80B",
                            NewPrice = 1500m,
                            OldPrice = 1600m
                        },
                        new
                        {
                            ProductId = 202,
                            Availability = "В наличии",
                            Brand = "Sony",
                            CategoryId = 2,
                            Images = "/img/tovar/braviaxr.jpg",
                            Model = "Bravia XR",
                            NewPrice = 1600m,
                            OldPrice = 1700m
                        },
                        new
                        {
                            ProductId = 203,
                            Availability = "В наличии",
                            Brand = "Samsung",
                            CategoryId = 2,
                            Images = "/img/tovar/neoqled.jpg",
                            Model = "Neo QLED",
                            NewPrice = 1900m,
                            OldPrice = 2000m
                        },
                        new
                        {
                            ProductId = 204,
                            Availability = "В наличии",
                            Brand = "Hisense",
                            CategoryId = 2,
                            Images = "/img/tovar/u8h.jpg",
                            Model = "U8H",
                            NewPrice = 1100m,
                            OldPrice = 1200m
                        },
                        new
                        {
                            ProductId = 205,
                            Availability = "В наличии",
                            Brand = "Sony",
                            CategoryId = 2,
                            Images = "/img/tovar/a90j.jpg",
                            Model = "A90J",
                            NewPrice = 2400m,
                            OldPrice = 2500m
                        },
                        new
                        {
                            ProductId = 206,
                            Availability = "В наличии",
                            Brand = "TCL",
                            CategoryId = 2,
                            Images = "/img/tovar/c835.jpg",
                            Model = "C835",
                            NewPrice = 1200m,
                            OldPrice = 1300m
                        },
                        new
                        {
                            ProductId = 207,
                            Availability = "В наличии",
                            Brand = "Samsung",
                            CategoryId = 2,
                            Images = "/img/tovar/qn85b.jpg",
                            Model = "QN85B",
                            NewPrice = 1700m,
                            OldPrice = 1800m
                        },
                        new
                        {
                            ProductId = 208,
                            Availability = "В наличии",
                            Brand = "LG",
                            CategoryId = 2,
                            Images = "/img/tovar/g2oled.jpg",
                            Model = "G2 OLED",
                            NewPrice = 2100m,
                            OldPrice = 2200m
                        },
                        new
                        {
                            ProductId = 209,
                            Availability = "В наличии",
                            Brand = "TCL",
                            CategoryId = 2,
                            Images = "/img/tovar/r635.jpg",
                            Model = "R635",
                            NewPrice = 950m,
                            OldPrice = 1000m
                        },
                        new
                        {
                            ProductId = 300,
                            Availability = "В наличии",
                            Brand = "Apple",
                            CategoryId = 3,
                            Images = "/img/tovar/macbookairm2.jpg",
                            Model = "MacBook Air M2",
                            NewPrice = 1200m,
                            OldPrice = 1300m,
                            Ram = "8GB",
                            Storage = "256GB"
                        },
                        new
                        {
                            ProductId = 301,
                            Availability = "В наличии",
                            Brand = "Dell",
                            CategoryId = 3,
                            Images = "/img/tovar/xps13.jpg",
                            Model = "XPS 13",
                            NewPrice = 1300m,
                            OldPrice = 1400m,
                            Ram = "16GB",
                            Storage = "512GB"
                        },
                        new
                        {
                            ProductId = 302,
                            Availability = "В наличии",
                            Brand = "Lenovo",
                            CategoryId = 3,
                            Images = "/img/tovar/thinkpadx1.jpg",
                            Model = "ThinkPad X1",
                            NewPrice = 1400m,
                            OldPrice = 1500m,
                            Ram = "16GB",
                            Storage = "512GB"
                        },
                        new
                        {
                            ProductId = 303,
                            Availability = "В наличии",
                            Brand = "HP",
                            CategoryId = 3,
                            Images = "/img/tovar/spectrex360.jpg",
                            Model = "Spectre x360",
                            NewPrice = 1500m,
                            OldPrice = 1600m,
                            Ram = "16GB",
                            Storage = "1TB"
                        },
                        new
                        {
                            ProductId = 304,
                            Availability = "В наличии",
                            Brand = "Asus",
                            CategoryId = 3,
                            Images = "/img/tovar/zenbook14.jpg",
                            Model = "ZenBook 14",
                            NewPrice = 1100m,
                            OldPrice = 1200m,
                            Ram = "8GB",
                            Storage = "512GB"
                        },
                        new
                        {
                            ProductId = 305,
                            Availability = "В наличии",
                            Brand = "Microsoft",
                            CategoryId = 3,
                            Images = "/img/tovar/surfacelaptop5.jpg",
                            Model = "Surface Laptop 5",
                            NewPrice = 1300m,
                            OldPrice = 1400m,
                            Ram = "8GB",
                            Storage = "256GB"
                        },
                        new
                        {
                            ProductId = 306,
                            Availability = "В наличии",
                            Brand = "Dell",
                            CategoryId = 3,
                            Images = "/img/tovar/inspiron14.jpg",
                            Model = "Inspiron 14",
                            NewPrice = 950m,
                            OldPrice = 1000m,
                            Ram = "8GB",
                            Storage = "256GB"
                        },
                        new
                        {
                            ProductId = 307,
                            Availability = "В наличии",
                            Brand = "Lenovo",
                            CategoryId = 3,
                            Images = "/img/tovar/legion5.jpg",
                            Model = "Legion 5",
                            NewPrice = 1400m,
                            OldPrice = 1500m,
                            Ram = "16GB",
                            Storage = "1TB"
                        },
                        new
                        {
                            ProductId = 308,
                            Availability = "В наличии",
                            Brand = "Asus",
                            CategoryId = 3,
                            Images = "/img/tovar/rogzephyrus.jpg",
                            Model = "ROG Zephyrus",
                            NewPrice = 1700m,
                            OldPrice = 1800m,
                            Ram = "16GB",
                            Storage = "1TB"
                        },
                        new
                        {
                            ProductId = 309,
                            Availability = "В наличии",
                            Brand = "HP",
                            CategoryId = 3,
                            Images = "/img/tovar/pavilion15.jpg",
                            Model = "Pavilion 15",
                            NewPrice = 1000m,
                            OldPrice = 1100m,
                            Ram = "8GB",
                            Storage = "512GB"
                        },
                        new
                        {
                            ProductId = 400,
                            Availability = "В наличии",
                            Brand = "Apple",
                            CategoryId = 4,
                            Images = "/img/tovar/homepodmini.jpg",
                            Model = "HomePod Mini",
                            NewPrice = 90m,
                            OldPrice = 100m
                        },
                        new
                        {
                            ProductId = 401,
                            Availability = "В наличии",
                            Brand = "Amazon",
                            CategoryId = 4,
                            Images = "/img/tovar/echodot5.jpg",
                            Model = "Echo Dot 5",
                            NewPrice = 50m,
                            OldPrice = 60m
                        },
                        new
                        {
                            ProductId = 402,
                            Availability = "В наличии",
                            Brand = "Bose",
                            CategoryId = 4,
                            Images = "/img/tovar/soundlink.jpg",
                            Model = "SoundLink",
                            NewPrice = 140m,
                            OldPrice = 150m
                        },
                        new
                        {
                            ProductId = 403,
                            Availability = "В наличии",
                            Brand = "Google",
                            CategoryId = 4,
                            Images = "/img/tovar/nestaudio.jpg",
                            Model = "Nest Audio",
                            NewPrice = 90m,
                            OldPrice = 100m
                        },
                        new
                        {
                            ProductId = 404,
                            Availability = "В наличии",
                            Brand = "JBL",
                            CategoryId = 4,
                            Images = "/img/tovar/charge5.jpg",
                            Model = "Charge 5",
                            NewPrice = 170m,
                            OldPrice = 180m
                        },
                        new
                        {
                            ProductId = 405,
                            Availability = "В наличии",
                            Brand = "JBL",
                            CategoryId = 4,
                            Images = "/img/tovar/partybox110.jpg",
                            Model = "PartyBox 110",
                            NewPrice = 380m,
                            OldPrice = 400m
                        },
                        new
                        {
                            ProductId = 406,
                            Availability = "В наличии",
                            Brand = "Bose",
                            CategoryId = 4,
                            Images = "/img/tovar/soundbar300.jpg",
                            Model = "Soundbar 300",
                            NewPrice = 420m,
                            OldPrice = 450m
                        },
                        new
                        {
                            ProductId = 407,
                            Availability = "В наличии",
                            Brand = "Sonos",
                            CategoryId = 4,
                            Images = "/img/tovar/roam.jpg",
                            Model = "Roam",
                            NewPrice = 170m,
                            OldPrice = 180m
                        },
                        new
                        {
                            ProductId = 408,
                            Availability = "В наличии",
                            Brand = "JBL",
                            CategoryId = 4,
                            Images = "/img/tovar/flip6.jpg",
                            Model = "Flip 6",
                            NewPrice = 120m,
                            OldPrice = 130m
                        },
                        new
                        {
                            ProductId = 409,
                            Availability = "В наличии",
                            Brand = "Sonos",
                            CategoryId = 4,
                            Images = "/img/tovar/onesl.jpg",
                            Model = "One SL",
                            NewPrice = 190m,
                            OldPrice = 200m
                        },
                        new
                        {
                            ProductId = 500,
                            Availability = "В наличии",
                            Brand = "Apple",
                            CategoryId = 5,
                            Images = "/img/tovar/ipadair5.jpg",
                            Model = "iPad Air 5",
                            NewPrice = 550m,
                            OldPrice = 600m,
                            Ram = "8GB",
                            Storage = "64GB"
                        },
                        new
                        {
                            ProductId = 501,
                            Availability = "В наличии",
                            Brand = "Samsung",
                            CategoryId = 5,
                            Images = "/img/tovar/galaxytabs8.jpg",
                            Model = "Galaxy Tab S8",
                            NewPrice = 650m,
                            OldPrice = 700m,
                            Ram = "8GB",
                            Storage = "128GB"
                        },
                        new
                        {
                            ProductId = 502,
                            Availability = "В наличии",
                            Brand = "Microsoft",
                            CategoryId = 5,
                            Images = "/img/tovar/surfacego3.jpg",
                            Model = "Surface Go 3",
                            NewPrice = 500m,
                            OldPrice = 550m,
                            Ram = "4GB",
                            Storage = "64GB"
                        },
                        new
                        {
                            ProductId = 503,
                            Availability = "В наличии",
                            Brand = "Huawei",
                            CategoryId = 5,
                            Images = "/img/tovar/matepad11.jpg",
                            Model = "MatePad 11",
                            NewPrice = 450m,
                            OldPrice = 500m,
                            Ram = "6GB",
                            Storage = "128GB"
                        },
                        new
                        {
                            ProductId = 504,
                            Availability = "В наличии",
                            Brand = "Lenovo",
                            CategoryId = 5,
                            Images = "/img/tovar/tabp11pro.jpg",
                            Model = "Tab P11 Pro",
                            NewPrice = 550m,
                            OldPrice = 600m,
                            Ram = "6GB",
                            Storage = "128GB"
                        },
                        new
                        {
                            ProductId = 505,
                            Availability = "В наличии",
                            Brand = "Apple",
                            CategoryId = 5,
                            Images = "/img/tovar/ipadpro11.jpg",
                            Model = "iPad Pro 11",
                            NewPrice = 850m,
                            OldPrice = 900m,
                            Ram = "8GB",
                            Storage = "256GB"
                        },
                        new
                        {
                            ProductId = 506,
                            Availability = "В наличии",
                            Brand = "Samsung",
                            CategoryId = 5,
                            Images = "/img/tovar/taba8.jpg",
                            Model = "Tab A8",
                            NewPrice = 280m,
                            OldPrice = 300m,
                            Ram = "4GB",
                            Storage = "64GB"
                        },
                        new
                        {
                            ProductId = 507,
                            Availability = "В наличии",
                            Brand = "Amazon",
                            CategoryId = 5,
                            Images = "/img/tovar/firehd10.jpg",
                            Model = "Fire HD 10",
                            NewPrice = 180m,
                            OldPrice = 200m,
                            Ram = "3GB",
                            Storage = "32GB"
                        },
                        new
                        {
                            ProductId = 508,
                            Availability = "В наличии",
                            Brand = "Lenovo",
                            CategoryId = 5,
                            Images = "/img/tovar/yogatab13.jpg",
                            Model = "Yoga Tab 13",
                            NewPrice = 650m,
                            OldPrice = 700m,
                            Ram = "8GB",
                            Storage = "128GB"
                        },
                        new
                        {
                            ProductId = 509,
                            Availability = "В наличии",
                            Brand = "Apple",
                            CategoryId = 5,
                            Images = "/img/tovar/ipadmini6.jpg",
                            Model = "iPad Mini 6",
                            NewPrice = 450m,
                            OldPrice = 500m,
                            Ram = "4GB",
                            Storage = "64GB"
                        });
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.ProductImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.ProductSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSpecifications");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FavoriteItem", b =>
                {
                    b.HasOne("TechnicalStoreBackEnd.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Admin", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Cart", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.CartItem", b =>
                {
                    b.HasOne("TechnicalStoreBackEnd.Models.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId");

                    b.HasOne("TechnicalStoreBackEnd.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Order", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.OrderItem", b =>
                {
                    b.HasOne("TechnicalStoreBackEnd.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnicalStoreBackEnd.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Product", b =>
                {
                    b.HasOne("TechnicalStoreBackEnd.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.ProductImage", b =>
                {
                    b.HasOne("TechnicalStoreBackEnd.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.ProductSpecification", b =>
                {
                    b.HasOne("TechnicalStoreBackEnd.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TechnicalStoreBackEnd.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
